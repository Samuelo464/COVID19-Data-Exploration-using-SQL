

---------COVID 19 Data Expoloration using SQL (Big Query)-----------

--Skills used are Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types


-- Verify data integrity 
SELECT *
FROM `covid-project23.CovidData.CovidDeaths`
ORDER BY 3, 4

SELECT *
FROM  `covid-project23.CovidData.CovidVaccination`
ORDER BY 3, 4

---------- COVID DEATHS--------

-- Select the Data tha will be used 
SELECT Location, date, total_cases, new_cases, total_deaths, population
FROM covid-project23.CovidData.CovidDeaths
Order by 1,4

-- Total cases vs Total Deaths in the United States
SELECT Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as Death_percentage
FROM `covid-project23.CovidData.CovidDeaths`
WHERE Location = 'United States'
Order by 2

--Percentage of U.S population contracted COVID
SELECT Location, date, population, total_cases, (total_cases/population)*100 as Contraction_rate
FROM `covid-project23.CovidData.CovidDeaths`
WHERE Location = "United States"
Order by 4 ASC

--What coutries have the highest infection rate per population
SELECT Location, population, MAX(total_cases) as Highest_Infection_count, MAX((total_cases/population))*100 as Population_Contraction_rate
FROM `covid-project23.CovidData.CovidDeaths`
WHERE Location !="World,North America, Europe, South America, Africa, Asia"
GROUP BY population, location
Order by 4 DESC

-- Countries with Highest Death Count per population
SELECT Location, population, MAX (total_deaths) as Highest_Mortality_Count, MAX((total_deaths/population))*100 as Population_Mortality_Rate
FROM `covid-project23.CovidData.CovidDeaths`
WHERE continent IS NOT null
GROUP BY population, Location
Order by 3 DESC

-- Identifying Global trends (Daily global Deaths and New Cases)
SELECT date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths
FROM `covid-project23.CovidData.CovidDeaths`
WHERE continent is not null AND total_cases is not null AND total_deaths is not null
Group by date
order by date

-- Total global cases VS Total Global Mortality 
SELECT SUM(new_deaths) as Global_deaths, SUM(new_cases) as Global_cases, (SUM(new_deaths)/SUM(new_cases))*100 as Global_death_rate
FROM `covid-project23.CovidData.CovidDeaths`
WHERE continent is not null

---------- VACCINATIONS--------

-- Select the data that will be used
SELECT *
FROM `covid-project23.CovidData.CovidDeaths`CD 
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date

-- Total Global population Vs Total Global vaccinations
SELECT CD.continent, CD.location, CD.date, CD.population, CV.new_vaccinations
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE CD.continent is not null

-- Looking at U.S vaccination trends
SELECT CD.location, CD.date, CD.population, CV.new_vaccinations
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE CD.location = "United States" 
  and CV.new_vaccinations is not null

-- Percentage of U.S population vaccinated
SELECT MAX(CD.population)as Population, MAX(total_vaccinations)as total_vaccinations, (MAX(CV.total_vaccinations)/MAX(CD.population))*100 as Total_vaccination_rate
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE CD.location = "United States"
  and Total_vaccinations is not null

-- Percentage of people vaccinated worldwide
SELECT MAX(CD.population)as Population, MAX(total_vaccinations)as total_vaccinations, (MAX(CV.total_vaccinations)/MAX(CD.population))*100 as Total_vaccination_rate
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE Total_vaccinations is not null


-- Rollong vaccination count of all countries 
SELECT CD.continent, CD.location, CD.date, CD.population, CV.new_vaccinations, SUM(CV.new_vaccinations) OVER (Partition by CD.location order by CD.location, CD.date) as Total_vaccinated
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE CD.continent is not null and new_vaccinations is not null
order by 2, 3
  
-- calculate rolling vaccination percentage using CTE and Temptables

-- Using CTE

With VaccinationPercentage (Continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as
(
SELECT CD.continent, CD.location, CD.date, CD.population, CV.new_vaccinations
, SUM(CV.new_vaccinations) OVER (Partition by CD.Location Order by CD.location, CD.Date) as RollingPeopleVaccinated
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE CD.continent is not null
)
Select *, (RollingPeopleVaccinated/Population)*100 as PercentVaccniated
From VaccinationPercentage


-- using a Temp Table 

Create Table #VaccinatedPopulationPercentage
(
Continent,
Location,
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)
Insert into #VaccinatedPopulationPercentage
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
FROM `covid-project23.CovidData.CovidDeaths`CD
  JOIN `covid-project23.CovidData.CovidVaccination`CV 
  on CD.location = CV.location
  and CD.date = CV.date
WHERE CD.continent is not null
Select *, (RollingPeopleVaccinated/Population)*100
From #VaccinatedPopulationPercentage


-- SELECTED TABLES WERE SAVED AND USED TO CREATE VISUALIZATIONS ON TABLEU



